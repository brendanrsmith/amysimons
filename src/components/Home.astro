---
import { Image } from "astro:assets";
import Link from "./link.astro";
import Pagelayout from "../layouts/Pagelayout.astro";
import { projects } from "./works";
---

<Pagelayout>
    <ul slot="body">
        {
            projects.map((project, index) => (
                <li>
                    <Link
                        href={`amysimons/work/${project.slug}`}
                        class="flex justify-between"
                        data-image-index={index}
                    >
                        <p>{project.title}</p>
                        <p>{project.year}</p>
                    </Link>
                </li>
            ))
        }
    </ul>

    <div slot="gallery">
        {
            projects.map((project, index) => (
                <div
                    class:list={[
                        "absolute duration-100",
                        { "opacity-0": index !== 0 },
                    ]}
                    data-image-container={index}
                >
                    <Image
                        src={project.image}
                        alt={project.title}
                        class="w-full h-full object-contain"
                        loading={index === 0 ? "eager" : "lazy"}
                    />
                </div>
            ))
        }
    </div>
</Pagelayout>

<script>
    const links = document.querySelectorAll("[data-image-index]");
    const imageContainers = document.querySelectorAll("[data-image-container]");

    // Set first link as active by default
    links[0].setAttribute("data-active", "true");

    links.forEach((link) => {
        link.addEventListener("mouseenter", (e) => {
            // Remove active state from all links
            links.forEach((l) => l.setAttribute("data-active", "false"));

            const target = (e.target as HTMLElement).closest(
                "[data-image-index]",
            );
            // Set active state for hovered link
            target?.setAttribute("data-active", "true");

            const index = (target as HTMLElement)?.dataset.imageIndex;

            if (index) {
                imageContainers.forEach((container, i) => {
                    container.classList.toggle(
                        "opacity-0",
                        i.toString() !== index,
                    );
                });
            }
        });
    });

    // Reset to first link active when mouse leaves the list
    // const section = document.querySelector("ul");
    // section?.addEventListener("mouseleave", () => {
    //     // Reset active state to first link
    //     links.forEach((link, i) => {
    //         link.setAttribute("data-active", i === 0 ? "true" : "false");
    //     });

    //     imageContainers.forEach((container, i) => {
    //         container.classList.toggle("opacity-0", i !== 0);
    //     });
    // });
</script>
